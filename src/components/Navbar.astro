---
const className = Astro.props.class

// 导航链接配置
const navLinks = [
  { name: 'Home', url: '/', external: false },
  { name: 'Archive', url: '/archive', external: false },
  { name: 'Tags', url: '/tags', external: false },
  { name: 'Map', url: '/map', external: false },
]
---

<div id="navbar" class="z-50">
  <div class="absolute h-8 left-0 right-0 -top-8 bg-white/5 backdrop-blur-sm transition">
  </div>
  <div
    class:list={[
      className,
      'bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl max-w-4xl h-[4.5rem] mx-auto flex items-center justify-between px-4',
    ]}
  >
    <!-- Left: Home Link -->
    <a
      href="/"
      class="flex items-center space-x-2 px-4 py-2 rounded-lg hover:bg-white/10 transition-colors"
    >
      <div class="flex flex-row text-blue-400 items-center text-lg font-bold">
        <svg class="w-7 h-7 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"
          ></path>
        </svg>
        <span class="text-white">My Blog</span>
      </div>
    </a>

    <!-- Center: Navigation Links (Desktop) -->
    <div class="hidden md:flex space-x-1">
      {
        navLinks.slice(1).map((link) => (
          <a
            href={link.external ? link.url : link.url}
            target={link.external ? '_blank' : null}
            class="px-4 py-2 rounded-lg hover:bg-white/10 transition-colors text-gray-300 hover:text-white font-medium"
          >
            <div class="flex items-center">
              {link.name}
              {link.external && (
                <svg
                  class="w-3 h-3 ml-1 opacity-50"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
                  />
                </svg>
              )}
            </div>
          </a>
        ))
      }
    </div>

    <!-- Right: Action Buttons -->
    <div class="flex items-center space-x-2">
      <!-- Search Button -->
      <button
        aria-label="Search"
        class="p-2 rounded-lg hover:bg-white/10 transition-colors text-gray-300 hover:text-white"
      >
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
        </svg>
      </button>

      <!-- Theme Toggle Button -->
      <button
        aria-label="Toggle Theme"
        class="p-2 rounded-lg hover:bg-white/10 transition-colors text-gray-300 hover:text-white"
        id="theme-toggle"
      >
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z"
          ></path>
        </svg>
      </button>

      <!-- Mobile Menu Button -->
      <button
        aria-label="Menu"
        class="p-2 rounded-lg hover:bg-white/10 transition-colors text-gray-300 hover:text-white md:hidden"
        id="mobile-menu-toggle"
      >
        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>
    </div>

    <!-- Mobile Menu Panel -->
    <div
      id="mobile-menu"
      class="absolute top-full left-0 right-0 mt-2 bg-white/5 backdrop-blur-sm border border-white/10 rounded-xl p-4 hidden md:hidden"
    >
      <div class="flex flex-col space-y-2">
        {
          navLinks.map((link) => (
            <a
              href={link.external ? link.url : link.url}
              target={link.external ? '_blank' : null}
              class="px-4 py-2 rounded-lg hover:bg-white/10 transition-colors text-gray-300 hover:text-white"
            >
              <div class="flex items-center">
                {link.name}
                {link.external && (
                  <svg
                    class="w-3 h-3 ml-1 opacity-50"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
                    />
                  </svg>
                )}
              </div>
            </a>
          ))
        }
      </div>
    </div>
  </div>
</div>

<script>
  // Mobile menu toggle
  function initMobileMenu() {
    const menuToggle = document.getElementById('mobile-menu-toggle')
    const mobileMenu = document.getElementById('mobile-menu')

    if (menuToggle && mobileMenu) {
      menuToggle.addEventListener('click', () => {
        mobileMenu.classList.toggle('hidden')
      })
    }
  }

  // Theme toggle (basic implementation)
  function initThemeToggle() {
    const themeToggle = document.getElementById('theme-toggle')

    if (themeToggle) {
      themeToggle.addEventListener('click', () => {
        // Basic theme toggle logic - can be enhanced later
        document.documentElement.classList.toggle('dark')
      })
    }
  }

  // Initialize when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    initMobileMenu()
    initThemeToggle()
  })
</script>
